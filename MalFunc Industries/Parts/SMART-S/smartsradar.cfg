PART
{
// MalFunc Industries an SM Industries company
// 
// 

// --- general parameters ---
name = smartsradar
module = Part
author = BahamutoD

// --- asset parameters ---
mesh = radar1.mu
rescaleFactor = 0.8


// --- node definitions ---
node_attach = 0.0, 0, 0, 0, -1, 0, 0


// --- editor parameters ---
TechRequired = precisionEngineering
entryCost = 2100
cost = 600
category = none
subcategory = 0
title = SMART-S Radar
manufacturer = MalFunc Industries
description = The SMART-S((Signaal Multibeam Acquisition Radar for Targeting working in the s-band) is a long range detection radar.
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1

// --- standard part parameters ---
mass = 1
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
maxTemp = 3600


MODULE
{
  name = ModuleRadar
  scanRotationSpeed = 180
  showDirectionWhileScan = true
  rotationTransformName = scanRotation
  canLock = false
  canRecieveRadarData = true
  canTrackWhileScan = false
  rwrThreatType = 5
     // idea: PESA, 3D volume search, S-band, detection only
        radarName = SMART-S Radar
        radarGroundClutterFactor = 0.25     //average performance also against surface targets
        radarDetectionCurve
        {
        // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
        // this defines both min/max range of the radar, and sensitivity/efficiency
        // it is recommended to define an "assured detection range", at which all craft are detected regardless
        //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
        //        key = distance	rcs
                  key = 0.0	0
                  key = 10	0	//very good performance at close range, high assured detection range
                  key = 15 10   //
                  key = 20 15	//good performance at medium range
                  key = 30 20
                  key = 40 25
                  key = 50 30	//average performance at longer range
        }
        radarLockTrackCurve
        {
          // same as detectionCurve, just for locking/tracking purpose
          // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
          //   ECM-jammers & chaff completely ineffective!!
          //      key = distance	rcs

        }
    }
  
}


}
