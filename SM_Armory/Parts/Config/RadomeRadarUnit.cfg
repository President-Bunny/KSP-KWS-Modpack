PART
{
// Kerbal Space Program - Part Config
// 
// 

// --- general parameters ---
name = SMARadome1RadarUnit
module = Part
author = Spanner
		MODEL
	{
		model = SM_Armory/Parts/Assets/RadomeRadarUnit/Radome1SM
		scale = 1.0, 1.0, 1.0
	}
rescaleFactor = 1
buoyancy = 0

// --- node definitions ---
node_attach = 0.0, 0, 0, 0, -1, 0, 0


// --- editor parameters ---
TechRequired = precisionEngineering
entryCost = 2100
cost = 600
category = none
subcategory = 0
	title = #autoLOC_SMIndustries_6000152	//#autoLOC_SMIndustries_6000152 = SMA Radome Detection Radar
manufacturer = SM Armory
	description = #autoLOC_SMIndustries_6000153	//#autoLOC_SMIndustries_6000153 = A compact all weather radar capable of detecting objects from a long distance.  This radar does  have the capability of tracking or locking targets.will also cook sausages and toasted snacks
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1
tags = radar scanner lock track
// --- standard part parameters ---
mass = 0.750
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
maxTemp = 3600


MODULE
{
  name = ModuleRadar
  scanRotationSpeed = 110
  showDirectionWhileScan = true
  rotationTransformName = shaft//rotationTransform

  canLock = true
  canRecieveRadarData = true
  canTrackWhileScan = true
  rwrThreatType = 0
  // idea: long range L-band radar with low resolution, only 1 lock
        //       resolution ok vs ships, but not good vs small airplanes
        radarName = SM Large Surface Detection Radar
        resourceDrain = 0.85
        rwrThreatType = 0
        maxLocks = 1
        radarGroundClutterFactor = 0.6     //very good in surface detection
        radarDetectionCurve
        {
        // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
        // this defines both min/max range of the radar, and sensitivity/efficiency
        // it is recommended to define an "assured detection range", at which all craft are detected regardless
        //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
        //        key = distance	rcs
                  key = 0.0	0
                  key = 5	0	//assured detection range
                  key = 15 25   //
                  key = 30 45
                  key = 45 65   //can detect large surface targets at that range, but not small aircraft
        }
        radarLockTrackCurve
        {
          // same as detectionCurve, just for locking/tracking purpose
          // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
          //   ECM-jammers & chaff completely ineffective!!
          //      key = distance	rcs
                  key = 0.0	0
                  key = 5	5	//
                  key = 15 30   //
                  key = 30 50
                  key = 40 65   //can lock/track large surface targets at that range, but not small aircraft
        }
    }
}
